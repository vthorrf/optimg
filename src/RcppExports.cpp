// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// grad
Rcpp::NumericVector grad(Function Model, NumericVector par, double h);
RcppExport SEXP _optimg_grad(SEXP ModelSEXP, SEXP parSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type Model(ModelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(grad(Model, par, h));
    return rcpp_result_gen;
END_RCPP
}
// gradN
Rcpp::NumericVector gradN(Function f, NumericVector par, double h, int order);
RcppExport SEXP _optimg_gradN(SEXP fSEXP, SEXP parSEXP, SEXP hSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(gradN(f, par, h, order));
    return rcpp_result_gen;
END_RCPP
}
// SGD
SEXP SGD(Function fn, NumericVector startvalue, Function gr, double h, int maxit, double tol, bool verbose);
RcppExport SEXP _optimg_SGD(SEXP fnSEXP, SEXP startvalueSEXP, SEXP grSEXP, SEXP hSEXP, SEXP maxitSEXP, SEXP tolSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type fn(fnSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type startvalue(startvalueSEXP);
    Rcpp::traits::input_parameter< Function >::type gr(grSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(SGD(fn, startvalue, gr, h, maxit, tol, verbose));
    return rcpp_result_gen;
END_RCPP
}
// STGD
SEXP STGD(Function fn, NumericVector startvalue, Function gr, double h, int maxit, double tol, bool verbose);
RcppExport SEXP _optimg_STGD(SEXP fnSEXP, SEXP startvalueSEXP, SEXP grSEXP, SEXP hSEXP, SEXP maxitSEXP, SEXP tolSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type fn(fnSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type startvalue(startvalueSEXP);
    Rcpp::traits::input_parameter< Function >::type gr(grSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(STGD(fn, startvalue, gr, h, maxit, tol, verbose));
    return rcpp_result_gen;
END_RCPP
}
// LMM
SEXP LMM(Function fn, NumericVector startvalue, Function gr, double h, int maxit, double tol, bool verbose);
RcppExport SEXP _optimg_LMM(SEXP fnSEXP, SEXP startvalueSEXP, SEXP grSEXP, SEXP hSEXP, SEXP maxitSEXP, SEXP tolSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Function >::type fn(fnSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type startvalue(startvalueSEXP);
    Rcpp::traits::input_parameter< Function >::type gr(grSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(LMM(fn, startvalue, gr, h, maxit, tol, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_optimg_grad", (DL_FUNC) &_optimg_grad, 3},
    {"_optimg_gradN", (DL_FUNC) &_optimg_gradN, 4},
    {"_optimg_SGD", (DL_FUNC) &_optimg_SGD, 7},
    {"_optimg_STGD", (DL_FUNC) &_optimg_STGD, 7},
    {"_optimg_LMM", (DL_FUNC) &_optimg_LMM, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_optimg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
